# Generated by Django 5.2.1 on 2025-05-15 10:07

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('new', 'New'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved')], default='new', max_length=20)),
                ('source', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('server', 'Server'), ('workstation', 'Workstation'), ('router', 'Router'), ('switch', 'Switch'), ('firewall', 'Firewall'), ('other', 'Other')], default='other', max_length=20)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('mac', models.CharField(blank=True, max_length=17, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('warning', 'Warning'), ('error', 'Error')], default='offline', max_length=20)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_ignored', models.BooleanField(default=False, help_text='Ignore this device in future scans')),
                ('is_manually_added', models.BooleanField(default=False, help_text='Whether this device was manually added')),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
            ],
            options={
                'verbose_name': 'Network Device',
                'verbose_name_plural': 'Network Devices',
                'ordering': ['-last_seen'],
            },
        ),
        migrations.CreateModel(
            name='NetworkScan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('in-progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='in-progress', max_length=20)),
                ('discovered_devices', models.IntegerField(default=0)),
                ('duration', models.FloatField(blank=True, help_text='Duration in seconds', null=True)),
                ('ip_range', models.CharField(blank=True, help_text='IP range scanned', max_length=100, null=True)),
                ('scan_method', models.CharField(default='nmap', help_text='Method used for scanning', max_length=100)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Network Scan',
                'verbose_name_plural': 'Network Scans',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SecurityStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('security_score', models.IntegerField(help_text='Overall security score (0-100)')),
                ('vulnerabilities_count', models.IntegerField(default=0)),
                ('last_scan_date', models.DateTimeField()),
                ('firewall_status', models.BooleanField(default=True)),
                ('updates_available', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Security Statuses',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('cpu_usage', models.FloatField(help_text='CPU usage percentage')),
                ('memory_usage', models.FloatField(help_text='Memory usage percentage')),
                ('disk_usage', models.FloatField(help_text='Disk usage percentage')),
                ('network_rx', models.FloatField(help_text='Network received (bytes/s)')),
                ('network_tx', models.FloatField(help_text='Network transmitted (bytes/s)')),
            ],
            options={
                'verbose_name_plural': 'System Metrics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('name', models.CharField(choices=[('owner', 'Owner'), ('admin', 'Administrator'), ('manager', 'Manager'), ('user', 'User')], max_length=20, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255)),
                ('priority', models.IntegerField(help_text='Lower numbers have higher priority', unique=True)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_manage_system', models.BooleanField(default=False)),
                ('can_manage_network', models.BooleanField(default=False)),
                ('can_view_all_data', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.userrole')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NetworkConnection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('wired', 'Wired'), ('wireless', 'Wireless'), ('vpn', 'VPN'), ('other', 'Other')], default='wired', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('warning', 'Warning'), ('error', 'Error')], default='inactive', max_length=20)),
                ('bandwidth', models.FloatField(blank=True, help_text='Bandwidth in Mbps', null=True)),
                ('latency', models.FloatField(blank=True, help_text='Latency in ms', null=True)),
                ('packet_loss', models.FloatField(blank=True, help_text='Packet loss percentage', null=True)),
                ('traffic', models.FloatField(blank=True, help_text='Current traffic in Mbps', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbound_connections', to='api.networkdevice')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbound_connections', to='api.networkdevice')),
            ],
            options={
                'verbose_name': 'Network Connection',
                'verbose_name_plural': 'Network Connections',
                'ordering': ['-updated_at'],
                'unique_together': {('source', 'target')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_system', models.BooleanField(default=False, help_text='Whether this is a system generated notification')),
                ('source', models.CharField(default='system', help_text='Source of the notification', max_length=100)),
                ('user', models.ForeignKey(blank=True, help_text="User this notification is for. If null, it's a system-wide notification", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='api_notific_user_id_c71477_idx'), models.Index(fields=['is_system', '-timestamp'], name='api_notific_is_syst_6669c1_idx')],
            },
        ),
    ]
